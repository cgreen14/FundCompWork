Connor Green
Lab report 10/9

In this lab we expolored different classes and this case I spent my time with a vector of strings.  This meant that my array could then expnad to fit new data.  From a users perspective the all the instructions are on the screen.  They are prompted to chose between actions that allow them to interact with thier "startup"  the first check on the user is if the file doesn't work correctly it will ask them to run the program again.  After this the program will check to make sure choice is within bounds and since the inputs besides choice are strings the user should be able to naturally label files and create sayings as they please.

	Internally main() is operated through a case structure that then calls a function based on the users wishes. Starting with dispAll, this function uses a for loop to display line by line the startup files contents.  Then enter new takes that same file and used the push back to add a new saying at the end.  This is an identical process to the way the vector is craeated in main, in which it goes line by line through the file and pushes each line to the bottom when it comes across and /n.  The find function, uses find, which normally would return the position of the phrase.  However, using a double negative, we can find that if no position (npos) is returned then the phrase is not present on the line, so we will only print lines were find doesn't equal npos.  Finally save, we create a file, open the file using a stream, then push in the data similiar to how it was displayed in the first function.  You could think about it as instead of writing to the commmand window its writing it to the new text file, that is then saved in the current folder.

The ability of the program to function was determined using user testing, as well as going into the current folder to check for the newly saved file.  This was very important when concerning the search function as well as making sure that errors popped up at for the right mistakes.  
